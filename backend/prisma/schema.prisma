generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  email       String   @unique
  password    String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  profile     Profile?
  posts       Post[]
  comments    Comment[]
  likes       Like[]
  following   Follow[] @relation("Following") // Users I follow
  followers   Follow[] @relation("Followers") // Users who follow me
}

model Profile {
  id          String   @id @default(uuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  description String?
  websiteUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id        String   @id @default(uuid())
  content   String   @db.VarChar(280)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String   @db.VarChar(280)
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(uuid())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Follow {
  id          String   @id @default(uuid())
  followerId  String
  followingId String
  follower    User   @relation("Followers", fields: [followerId], references: [id])
  following   User   @relation("Following", fields: [followingId], references: [id])
  createdAt   DateTime @default(now())
  @@unique([followerId, followingId]) // Prevent duplicate follows
}